###
#
# This is the zabbix_db_proxy_install_primary.yml playbook which is getting executed
# @host: Primary_DB_Proxy_Zabbix
# 
# @author: Sankar
# @date:
# @version: 1
#
###  

   # - include_tasks: api.yml
   - setup:
   - name: Get Environment variable Admin_Root
     set_fact:
       Admin_Root: "{{lookup('env','Admin_Root') }}"
   - debug:
      msg: "{{Admin_Root}}"

## including vars environment.yml
#   - include_vars: "{{Admin_Root}}/Portal_Scripts/Bin/environment.yml"
#   - debug:
#       msg: Zabbix DB precheck passed on "{{ ansible_hostname }}"
#   - set_fact:
#       db_ip: "{{ ansible_default_ipv4.address }}"
#       cacheable: true

## Executing Zabbix_DB_Install_Proxy.py for MySql installation
#   - command: python3.7 Zabbix_DB_Install_Proxy.py "Primary"
#     args:
#       chdir: "{{Admin_Root}}/zabbix/Bin/Install"

## including vars db_vault.yml
#   - name: Import vault for DB Credentials
#     # include_vars: /root/Ansible-Test/vars/db_vault.yml
#     include_vars: "{{Admin_Root}}/Ansible-Playbooks/vars/db_vault.yml"
#
#   # - command: python Zabbix_DB_Install_Proxy.py "{{ db_user }}"  "{{ db_pass }}"  "{{ db_ip }}" "{{Environment}}"
#   #   args:
#   #     chdir: /root/Desktop/zabbix-distributed/Bin

# Executing Zabbix_DB_Install_Proxy.py for Zabbix DB proxy install
   - command: python3.7 Zabbix_DB_Proxy_Config.py  "Primary"
     args:
       chdir: "{{ ansible_env.Admin_Root }}/zabbix/Bin/Configurations"

# Added this for rollback ---------------------------------
     register: result
     ignore_errors: yes

   - set_fact:
       pyresult: "3rr0rC0d3[00{{result.rc}}]"

   - debug:
       msg: "{{result.stdout_lines[0]}}"

   - set_fact:
       pyresult: "{{result.stdout_lines[0]}}"
     when: result.rc == 0














## storing all files from output folder to a found_files variable
#   - name: Get files in a folder
#     find:
#       # paths: "/root/Desktop/zabbix-distributed/Output"
#       paths: "{{Admin_Root}}/zabbix-env/Zabbix_DB_Proxy/Output"
#     register: found_files
#
## storing the latest output file name to 'latest_file' variable
#   - name: Get latest file
#     set_fact:
#       latest_file: "{{ found_files.files | sort(attribute='mtime',reverse=true) | first }}"
#
## priting the latest output file name
#   - name: Print Lastest file name
#     debug:
#       var: latest_file.path
#
## separating the latest output file's content with comma
## and storing the first column result to 'zabbiz_log' variable
#   - name: Read the latest log file
#     shell: cat {{ latest_file.path }} | awk 'BEGIN {FS = ","} ; {print $1}'
#     register: zabbiz_log
#
## priting the 'zabbiz_log' variable value
#   - name: Displaying the status of Zabbix  Install
#     debug:
#       var:   zabbiz_log.stdout_lines
#
## copying the 'zabbiz_log' variable value to 'zabbix_pre.result' file
#   - name: Saving the Zabbix test results
#     copy:
#       content: "{{ zabbiz_log.stdout_lines }}"
#       # dest: /root/Desktop/zabbix-distributed/zabbix_pre.result
#       dest: "{{Admin_Root}}/zabbix-env/Zabbix_DB_Proxy/zabbix_pre.result"
#       force: yes
#
## creating a json string for zabbix_pre.result and register in zabbix_pre_post
#   - name: Create a json string for status
#     # shell: cat /root/Desktop/zabbix-distributed/zabbix_pre.result | tr -d '"' | tr -d '[' |tr -d ']'
#     shell: cat "{{Admin_Root}}/zabbix-env/Zabbix_DB_Proxy/zabbix_pre.result" | tr -d '"' | tr -d '[' |tr -d ']'
#     register: zabbix_pre_post
#
## Storing the output of shell command in  zabbix_db_ins variable
#   - name: Validate the Zabbix DB Install  results
#     # shell: cat /root/Desktop/zabbix-distributed/zabbix_pre.result | grep -i fail
#     shell: cat "{{Admin_Root}}/zabbix-env/Zabbix_DB_Proxy/zabbix_pre.result" | grep -i fail
#     failed_when: false
#     register: zabbix_db_ins
#
## creating a file zabbix_db_p2 if found 0 in zabbix_db_ins.rc (result check)
#   - name: Create a failure marker
#     file:
#       path: /tmp/cleanup/zabbix_db_p2
#       state: touch
#     delegate_to: localhost
#     when: zabbix_db_ins.rc == 0
