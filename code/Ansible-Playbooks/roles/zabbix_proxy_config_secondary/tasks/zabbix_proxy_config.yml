   # - include_tasks: api.yml
   - setup:
   - set_fact:
       Admin_Root: "{{lookup('env','Admin_Root')}}"
   
#   - include_vars: "{{Admin_Root}}/Portal_Scripts/Bin/environment.yml"
   
   - name: Get Environment variable Admin_Root
     debug:
      msg: "{{Admin_Root}}"
#   - name: Create folder structure for Zabbix App install
#     file:
#       path: "{{Admin_Root}}/zabbix-env/Zabbix_Proxy/"
#       state: directory
#
#   - name: Copy the Zabbix  Pre-Check scripts for App install
#     copy:
#       src: "{{Admin_Root}}/Zabbix_Proxy/"
#       dest: "{{Admin_Root}}/zabbix-env/Zabbix_Proxy"
   - name: Print the name of DB node
     set_fact:
       db_ip: "{{ item }}" 
     with_items:
       - "{{ groups ['Secondary_DB_Proxy_Zabbix'] }}"
   - set_fact:
       Zabbix_Server: "{{item}}"
     with_items:
       - "{{groups['Secondary_Core_Zabbix']}}"        
   - command: python3.7 Zabbix_Proxy_Config.py "Secondary" "{{ db_ip }}" "{{ Zabbix_Server }}"
     args:
       chdir: "{{ ansible_env.Admin_Root }}/zabbix/Bin/Configurations"
# Added this for rollback ---------------------------------
#     register: result
 #    ignore_errors: yes

  # - set_fact:
   #    pyresult: "3rr0rC0d3[00{{result.rc}}]"

   #- debug:
    #   msg: "{{result.stdout_lines[0]}}"

  # - set_fact:
   #    pyresult: "{{result.stdout_lines[0]}}"
   #  when: result.rc == 0

#   - name: Get files in a folder
#     find:
#       paths: "{{Admin_Root}}/zabbix-env/Zabbix_Proxy/Output"
#     register: found_files
#
#   - name: Get latest file
#     set_fact:
#       latest_file: "{{ found_files.files | sort(attribute='mtime',reverse=true) | first }}"
#   - name: Print Lastest file name
#     debug:
#       var: latest_file.path
#
#   - name: Read the latest log file
#     shell: cat {{ latest_file.path }} | awk 'BEGIN {FS = ","} ; {print $1}'
#     register: zabbiz_log
#
#   - name: Displaying the status of Zabbix pre-requisites
#     debug:
#       var:   zabbiz_log.stdout_lines
#   - name: Saving the Zabbix test results
#     copy:
#       content: "{{ zabbiz_log.stdout_lines }}"
#       dest: "{{Admin_Root}}/zabbix-env/Zabbix_Proxy/zabbix_install_prxy.result"
#       force: yes
#
#   - name: Create a json string for status
#     shell: cat /tmp/zabbix_install_prxy.result | tr -d '"' | tr -d '[' |tr -d ']'
#     register: zabbix_pre_post
#
#   - name: Validate the Zabbix Proxy Install results
#     shell: cat "{{Admin_Root}}/zabbix-env/Zabbix_Proxy/zabbix_install_prxy.result" | grep -i fail
#     failed_when: false
#     register: zabbix_prxy_ins
#
#
#   - name: Create a Marker file in case of Zabbix App install failure
#     file:
#       path: /tmp/cleanup/zabbix_prxy
#       state: touch
#     delegate_to: localhost
#     when: zabbix_prxy_ins.rc == 0
